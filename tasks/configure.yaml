---

- name: create directories for root, data, tmp
  file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ gem_backup_user }}"
    group: "{{ gem_backup_group }}"
    mode: 0750
  with_items:
    - "{{ gem_backup_root_path }}"
    - "{{ gem_backup_data_path }}"
    - "{{ gem_backup_tmp_path }}"

- name: remove old models
  file:
    dest: "{{ gem_backup_root_path }}/models"
    state: absent
  when: gem_backup_models_keep_only_specified|bool

- name: create directories for models
  file:
    dest: "{{ gem_backup_root_path }}/models"
    state: directory
    owner: "{{ gem_backup_user }}"
    group: "{{ gem_backup_group }}"
    mode: 0750

- name: create config for backup app
  template:
    src: config.rb.j2
    dest: "{{ gem_backup_root_path }}/config.rb"
    owner: "{{ gem_backup_user }}"
    group: "{{ gem_backup_group }}"
    mode: 0600

- name: create config for backup task
  template:
    src: model.rb.j2
    dest: "{{ gem_backup_root_path }}/models/{{ item.name }}.rb"
    owner: "{{ gem_backup_user }}"
    group: "{{ gem_backup_group }}"
    mode: 0600
  with_items:
    - "{{ gem_backup_models }}"

- block:
    - command: backup check -c "{{ gem_backup_root_path }}/config.rb"
      register: check_command
  rescue:
    - debug: var=check_command
    - fail: msg="fail when validate backup config"

- name: add cron task
  cron:
    name: "Backup job: {{ item.name }}"
    cron_file: backup
    minute: "{{ item.cron.minute | default(15) }}"
    hour: "{{ item.cron.hour | default(4) }}"
    day: "{{ item.cron.day | default(omit) }}"
    weekday: "{{ item.cron.weekday | default(omit) }}"
    user: "{{ gem_backup_user }}"
    job: '/bin/bash -lc "{{ item.cron.before|d("date") }} && backup perform --trigger {{ item.name }} --config-file {{ gem_backup_root_path }}/config.rb"'
    state: "{{ item.cron.state | default(absent) }}"
  with_items:
    - "{{ gem_backup_models }}"
