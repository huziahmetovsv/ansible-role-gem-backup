{% for model_notify in item.notifiers | d([]) %}
{% for notty in gem_backup_notifiers %}
{% if notty.name == model_notify %}
{% if notty.type == 'mail' %}
  ##
  # Mail [Notifier]
  #
  notify_by Mail do |mail|
    mail.on_success           = {{ notty.on_success | d('true') }}
    mail.on_warning           = {{ notty.on_warning | d('true') }}
    mail.on_failure           = {{ notty.on_failure | d('true') }}

    mail.from                 = "{{ notty.from }}"
    mail.to                   = "{{ notty.to }}"
{% if notty.cc is defined %}
   mail.cc                   = "{{ notty.cc }}"
{% endif %}
{% if notty.bcc is defined %}
   mail.bcc                  = "{{ notty.bcc }}"
{% endif %}
{% if notty.reply_to is defined %}
    mail.reply_to             = "{{ notty.reply_to }}"
{% endif %}
    mail.address              = "{{ notty.address }}"
    mail.port                 = {{ notty.port | d(25) }}
{% if notty.domain is defined %}
    mail.domain               = "{{ notty.domain }}"
{% endif %}
{% if notty.username is defined %}
    mail.user_name            = "{{ notty.username }}"
{% endif %}
{% if notty.password is defined %}
    mail.password             = "{{ notty.password }}"
{% endif %}
{% if notty.authentication is defined %}
    mail.authentication       = "{{ notty.authentication }}"
{% endif %}
    mail.encryption           = {{ notty.encryption | d(':none') }}
{% if notty.openssl_verify_mode is defined %}
   mail.openssl_verify_mode   = "{{ notty.openssl_verify_mode }}"
{% endif %}
  end
{% endif %}
{% if notty.type == 'http_post' %}
  ##
  # HttpPost [Notifier]
  #
  notify_by HttpPost do |post|
    post.on_success = {{ notty.on_success | d('true') }}
    post.on_warning = {{ notty.on_success | d('true') }}
    post.on_failure = {{ notty.on_success | d('true') }}

    # URI to post the notification to.
    # Port may be specified if needed.
    # If Basic Authentication is required, supply user:pass.
    post.uri = '{{ notty.uri }}'

    ##
    # Optional
    #
    # Additional headers to send.
    # post.headers = { 'Authentication' => 'my_auth_info' }
    #
    # Additional form params to post.
    # post.params = { 'auth_token' => 'my_token' }
    #
    # Successful response codes. Default: 200
    # post.success_codes = [200, 201, 204]
    #
    # Defaults to true on most systems.
    # Force with +true+, disable with +false+
    # post.ssl_verify_peer = false
    #
    # Supplied by default. Override with a custom 'cacert.pem' file.
    # post.ssl_ca_file = '/my/cacert.pem'
  end
{% endif %}
{% if notty.type == 'slack' %}
  ##
  # Slack [Notifier]
  #
  notify_by Slack do |slack|
    slack.on_success = {{ notty.on_success | d('true') }}
    slack.on_warning = {{ notty.on_success | d('true') }}
    slack.on_failure = {{ notty.on_success | d('true') }}

    # The incoming webhook url
    # https://hooks.slack.com/services/xxxxxxxx/xxxxxxxxx/xxxxxxxxxx
    slack.webhook_url = '{{ notty.url }}'

    ##
    # Optional
    #
    # The channel to which messages will be sent
{% if notty.channel is defined %}
    slack.channel = '{{ notty.channel }}'
{% endif %}
    #
    # The username to display along with the notification
{% if notty.username is defined %}
    slack.username = '{{ notty.username }}'
{% endif %}
  end
{% endif %}
{% if notty.type == 'command' %}
  notify_by Command do |cmd|
    cmd.on_success = {{ notty.on_success | d('true') }}
    cmd.on_warning = {{ notty.on_warning | d('true') }}
    cmd.on_failure = {{ notty.on_failure | d('true') }}

    cmd.command = '{{ notty.cmd }}'

    cmd.args = {{ notty.args|default('["Backup %l", "%v"]') }}
  end
{% endif %}
{% endif %}
{% endfor %}
{% endfor %}
